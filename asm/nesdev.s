;
; File generated by cc65 v 2.16 - Git e67bbcb
;
	.fopt		compiler,"cc65 v 2.16 - Git e67bbcb"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_pal_bg
	.import		_oam_spr
	.import		_oam_meta_spr
	.import		_scroll
	.import		_rand8
	.import		_vram_adr
	.import		_vram_put
	.export		_flash
	.export		_shake
	.export		_spr
	.export		_metaspr
	.export		_spr_s
	.export		_metaspr_s
	.export		_point_in_rect
	.export		_rect_collides
	.export		_digit_update
	.export		_digit_increment
	.export		_nt_print

.segment	"BSS"

_rect_max_x1:
	.res	1,$00
_rect_max_x2:
	.res	1,$00
_rect_max_y1:
	.res	1,$00
_rect_max_y2:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ __fastcall__ flash (__near__ const unsigned char *, __near__ const unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_flash: near

.segment	"DATA"

L0003:
	.byte	$00

.segment	"CODE"

	jsr     pushax
	lda     L0003
	eor     #$01
	sta     L0003
	lda     L0003
	beq     L0009
	ldy     #$01
	jmp     L0088
L0009:	ldy     #$03
L0088:	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _pal_bg
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ shake (signed char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_shake: near

.segment	"DATA"

L000E:
	.byte	$00
L0010:
	.byte	$00

.segment	"CODE"

	jsr     pusha
	jsr     _rand8
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	bpl     L0014
	dex
L0014:	jsr     tosumodax
	sta     L000E
	jsr     _rand8
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	bpl     L0017
	dex
L0017:	jsr     tosumodax
	sta     L0010
	jsr     _rand8
	cmp     #$81
	bcc     L0018
	lda     L000E
	jsr     pusha0
	ldx     #$FF
	txa
	jsr     tosumulax
	sta     L000E
L0018:	jsr     _rand8
	cmp     #$81
	bcc     L0089
	lda     L0010
	jsr     pusha0
	ldx     #$FF
	txa
	jsr     tosumulax
	sta     L0010
L0089:	lda     L000E
	jsr     pusha0
	lda     L0010
	jsr     _scroll
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ spr (unsigned char, unsigned char, unsigned char, unsigned char, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_spr: near

.segment	"CODE"

	jsr     pushax
	jsr     pushw0sp
	jsr     decsp4
	ldy     #$0A
	lda     (sp),y
	ldy     #$03
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	ldy     #$02
	sta     (sp),y
	ldy     #$0B
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	ldy     #$08
	lda     (sp),y
	ldy     #$00
	sta     (sp),y
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	jsr     _oam_spr
	ldy     #$00
	jsr     staspidx
	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ metaspr (__near__ const unsigned char *, unsigned char, unsigned char, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_metaspr: near

.segment	"CODE"

	jsr     pushax
	jsr     pushw0sp
	jsr     decsp3
	ldy     #$08
	lda     (sp),y
	ldy     #$02
	sta     (sp),y
	ldy     #$07
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	ldy     #$06
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	sta     (sp),y
	ldy     #$0A
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _oam_meta_spr
	ldy     #$00
	jsr     staspidx
	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ spr_s (__near__ const struct sprite *, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_spr_s: near

.segment	"CODE"

	jsr     pushax
	jsr     pushw0sp
	jsr     decsp4
	ldy     #$09
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$03
	lda     (ptr1),y
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	ldy     #$02
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	jsr     _oam_spr
	ldy     #$00
	jsr     staspidx
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ metaspr_s (__near__ const struct metasprite *, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_metaspr_s: near

.segment	"CODE"

	jsr     pushax
	jsr     pushw0sp
	jsr     decsp3
	ldy     #$08
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	ldy     #$02
	sta     (sp),y
	ldy     #$08
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	sta     (sp),y
	ldy     #$06
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	sta     (sp),y
	ldy     #$08
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     _oam_meta_spr
	ldy     #$00
	jsr     staspidx
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ point_in_rect (__near__ const struct rect *, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_point_in_rect: near

.segment	"CODE"

	jsr     pusha
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$02
	lda     (ptr1),y
	jsr     tosadda0
	sta     _rect_max_x1
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	jsr     pusha0
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	jsr     tosadda0
	sta     _rect_max_y1
	ldy     #$01
	lda     (sp),y
	jsr     pusha0
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (ptr1,x)
	jsr     tosicmp0
	bcc     L0048
	beq     L0048
	ldx     #$00
	lda     (sp,x)
	jsr     pusha0
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	jsr     tosicmp0
	bcc     L0048
	beq     L0048
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	cmp     _rect_max_x1
	txa
	bcs     L008D
	lda     (sp,x)
	cmp     _rect_max_y1
	bcc     L008B
L0048:	ldx     #$00
	txa
L008D:	jmp     incsp4
L008B:	tya
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ rect_collides (__near__ const struct rect *, __near__ const struct rect *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_rect_collides: near

.segment	"CODE"

	jsr     pushax
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$02
	lda     (ptr1),y
	jsr     tosadda0
	sta     _rect_max_x1
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	jsr     pusha0
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	jsr     tosadda0
	sta     _rect_max_y1
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (ptr1),y
	jsr     pusha0
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (ptr1),y
	jsr     tosadda0
	sta     _rect_max_x2
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	iny
	lda     (ptr1),y
	jsr     pusha0
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	iny
	lda     (ptr1),y
	jsr     tosadda0
	sta     _rect_max_y2
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldx     #$00
	lda     (ptr1,x)
	cmp     _rect_max_x2
	txa
	bcs     L0090
	lda     _rect_max_x1
	jsr     pusha0
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (ptr1,x)
	jsr     tosicmp0
	bcc     L0055
	beq     L0055
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	ldx     #$00
	lda     (ptr1),y
	cmp     _rect_max_y2
	txa
	bcs     L0090
	lda     _rect_max_y1
	jsr     pusha0
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	jsr     tosicmp0
	beq     L0055
	bcs     L0054
L0055:	ldx     #$00
	txa
L0090:	jmp     incsp4
L0054:	lda     #$01
	ldx     #$00
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ digit_update (__near__ struct digits *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_digit_update: near

.segment	"DATA"

L0058:
	.byte	$00

.segment	"CODE"

	jsr     pushax
	lda     #$00
	sta     L0058
L0094:	lda     L0058
	cmp     #$06
	bcs     L005B
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     L0058
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	cmp     #$0A
	bcc     L0095
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     L0058
	bcc     L0092
	inx
L0092:	sta     ptr1
	stx     ptr1+1
	tya
	sta     (ptr1),y
	tax
	lda     L0058
	clc
	adc     #$01
	bcc     L0093
	inx
	clc
L0093:	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	dey
	lda     (ptr1),y
	clc
	adc     #$01
	sta     (ptr1),y
L0095:	inc     L0058
	jmp     L0094
L005B:	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$07
	lda     (ptr1),y
	cmp     #$0A
	bcc     L006C
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     #$09
	ldy     #$07
	sta     (ptr1),y
L006C:	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ digit_increment (__near__ struct digits *, signed char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_digit_increment: near

.segment	"CODE"

	jsr     pusha
	ldy     #$02
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     pushax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sta     ptr1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	ldy     #$00
	jsr     staspidx
	ldy     #$02
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _digit_update
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ nt_print (unsigned int, __near__ const unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_nt_print: near

.segment	"CODE"

	jsr     pushax
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _vram_adr
L007C:	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (ptr1),y
	beq     L007D
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L0086
	inx
L0086:	jsr     stax0sp
	ldy     #$00
	lda     (regsave),y
	sec
	sbc     #$20
	jsr     _vram_put
	jmp     L007C
L007D:	jmp     incsp4

.endproc

