;
; File generated by cc65 v 2.16 - Git N/A
;
	.fopt		compiler,"cc65 v 2.16 - Git N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_metaspr
	.export		_META_PLAYERONE
	.export		_player_init
	.export		_player_update
	.export		_player_draw

.segment	"RODATA"

_META_PLAYERONE:
	.byte	$06
	.byte	$00
	.byte	$50
	.byte	$00
	.byte	$06
	.byte	$08
	.byte	$60
	.byte	$00
	.byte	$0E
	.byte	$04
	.byte	$40
	.byte	$02
	.byte	$16
	.byte	$04
	.byte	$41
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$51
	.byte	$01
	.byte	$80

; ---------------------------------------------------------------
; void __near__ __fastcall__ player_init (__near__ struct player *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_player_init: near

.segment	"CODE"

;
; {
;
	jsr     pushax
;
; player->x  = 0;
;
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	tya
	sta     (ptr1),y
;
; player->y  = 0; // some ground constant for the map
;
	iny
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	tya
	iny
	sta     (ptr1),y
;
; player->sprite = NULL;
;
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	tya
	ldy     #$03
	sta     (ptr1),y
	iny
	sta     (ptr1),y
;
; player->body.w = 8;
;
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     #$08
	ldy     #$07
	sta     (ptr1),y
;
; player->body.h = PLAYER_HEIGHT;
;
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     #$10
	ldy     #$08
	sta     (ptr1),y
;
; player->hitbox.w = 8;
;
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     #$08
	ldy     #$0B
	sta     (ptr1),y
;
; player->hitbox.h = PLAYER_HEIGHT;
;
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     #$10
	ldy     #$0C
	sta     (ptr1),y
;
; }
;
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ player_update (__near__ struct player *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_player_update: near

.segment	"CODE"

;
; {
;
	jsr     pushax
;
; }
;
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ player_draw (__near__ struct player *, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_player_draw: near

.segment	"CODE"

;
; {
;
	jsr     pushax
;
; if (! player->sprite) return;
;
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$04
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     bnegax
	bne     L0027
;
; metaspr(player->sprite->index_buffer, player->x, player->y, oam_ptr);
;
	jsr     decsp4
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$04
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	iny
	sta     (sp),y
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	dey
	sta     (sp),y
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _metaspr
;
; }
;
L0027:	jmp     incsp4

.endproc

